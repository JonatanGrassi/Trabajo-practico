//created on: 15/04/2022
package rulesMontaniaRusa

//list any import classes here.
import conceptos.MontaniaRusa;
import conceptos.Clima;
import conceptos.DiagnosticoOperatividad;
import conceptos.DiagnosticoElectromecanico;
import conceptos.DiagnosticoMecanico;
import conceptos.DiagnosticoElectrico;
import atributos.ResultadoFinalDiagnosticoElectrico;
import atributos.ResultadoAnalisisClimatico;
import atributos.ResultadoFinalDiagnosticoElectromecanico;
import atributos.ResultadoFinalDiagnosticoMecanico;
import atributos.IntegridadFrenos;
import atributos.EstadoCorrosion;
import atributos.AlineacionEngranes;
import atributos.NivelDepositoAceite;
import atributos.DesgasteCinturon;
import atributos.TipoDesgaste;
import atributos.NivelTension;
import atributos.FuncionamientoSensores;
import atributos.OperatividadSensorParada;
import atributos.OperatividadSensoresMonitoreo;
import atributos.BateriaPLC;
import atributos.Consideraciones;
import atributos.ResultadoAnalisisClimatico;
import utils.TestCaseUtils;

//declare any global variables here


rule "R01 - Rafaga Clima Desfavorable"
    when
        $atraccion: MontaniaRusa(
        clima.intensidadRafagas > 70,
        resultadoFinal.analisisClimatico.resultadoAnalisis.compare(ResultadoAnalisisClimatico.NoDeterminado) 
        )
    then 
    	modify($atraccion){
       		resultadoFinal.analisisClimatico.setResultadoAnalisis(ResultadoAnalisisClimatico.ClimaDesfavorable);
		}  	
end


rule "R02 - Precipitaciones Clima Desfavorable"
    when
        $atraccion: MontaniaRusa(
    		clima.intensidadPrecipitaciones > 10,
        	resultadoFinal.analisisClimatico.resultadoAnalisis.compare(ResultadoAnalisisClimatico.NoDeterminado) 
        )
    then
    	modify($atraccion){
       		resultadoFinal.analisisClimatico.setResultadoAnalisis(ResultadoAnalisisClimatico.ClimaDesfavorable); 
		}
end

rule "R03 - Clima Favorable"
    when
        $atraccion: MontaniaRusa(
    		clima.intensidadPrecipitaciones <= 10,
    		clima.intensidadRafagas <= 70,
        	resultadoFinal.analisisClimatico.resultadoAnalisis.compare(ResultadoAnalisisClimatico.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.analisisClimatico.setResultadoAnalisis(ResultadoAnalisisClimatico.ClimaFavorable); 
		}
end


rule "R04 - Falla Frenos Pastillas"
    when
        $atraccion: MontaniaRusa(
        	frenos.espesorPastillas <= 4,
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.integridadFrenos.compare(IntegridadFrenos.NoDeterminado)
        )
    then
   		modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.setIntegridadFrenos(IntegridadFrenos.FallaFrenosFriccion); 
		}	
end


rule "R05 - Falla Frenos imanes"
    when
        $atraccion: MontaniaRusa(
    		frenos.potenciaImanes < 14200,
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.integridadFrenos.compare(IntegridadFrenos.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.setIntegridadFrenos(IntegridadFrenos.FallaFrenosMagneticos); 
		}
end

rule "R06 - Corrocion en frenos"
    when
        $atraccion: MontaniaRusa(
    		frenos.corrosion.compare(EstadoCorrosion.PresentaCorrosion),
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.integridadFrenos.compare(IntegridadFrenos.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.setIntegridadFrenos(IntegridadFrenos.FrenosDañadosCorrosion); 
		}
end

rule "R07 - Frenos sin fallas"
    when
        $atraccion: MontaniaRusa(
    		frenos.corrosion.compare(EstadoCorrosion.NoPresentaCorrosion),
    		frenos.espesorPastillas > 4,
    		frenos.potenciaImanes >= 14200,
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.integridadFrenos.compare(IntegridadFrenos.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.setIntegridadFrenos(IntegridadFrenos.PerfectoEstado); 
		}
end

rule "R08 - Engranes alineados"
    when
        $atraccion: MontaniaRusa(
    		Engranes.porcentajeAlineacion >= 85,
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.alineacionEngranes.compare(AlineacionEngranes.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.setAlineacionEngranes(AlineacionEngranes.Alineado); 
		}
end

rule "R09 - Engranes desalineados"
    when
        $atraccion: MontaniaRusa(
    		Engranes.porcentajeAlineacion < 85,
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.alineacionEngranes.compare(AlineacionEngranes.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.setAlineacionEngranes(AlineacionEngranes.Desalineado); 
		}
end

rule "R10 - Aceite suficiente"
    when
        $atraccion: MontaniaRusa(
    		depositoAceite.nivelAceite > 95,
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.nivelDepositoAceite.compare(NivelDepositoAceite.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.setNivelDepositoAceite(NivelDepositoAceite.Suficiente); 
		}
end

rule "R11 - Aceite insuficiente"
    when
        $atraccion: MontaniaRusa(
    		depositoAceite.nivelAceite <= 95,
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.nivelDepositoAceite.compare(NivelDepositoAceite.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.setNivelDepositoAceite(NivelDepositoAceite.Insuficiente); 
		}
end

rule "R12 - Desgaste hebilla"
    when
        $atraccion: MontaniaRusa(
    		cinturones.desgaste.compare(TipoDesgaste.DesgasteHebillas),
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.desgasteCinturon.compare(DesgasteCinturon.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.setDesgasteCinturon(DesgasteCinturon.Desgastado); 
		}
end

rule "R13 - Desgaste tiras"
    when
        $atraccion: MontaniaRusa(
    		cinturones.desgaste.compare(TipoDesgaste.DesgasteTiras),
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.desgasteCinturon.compare(DesgasteCinturon.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.setDesgasteCinturon(DesgasteCinturon.NoDesgastado); 
		}
end

rule "R14 - Cinturon sin desgaste"
    when
        $atraccion: MontaniaRusa(
    		cinturones.desgaste.compare(TipoDesgaste.BuenEstado),
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.desgasteCinturon.compare(DesgasteCinturon.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.setDesgasteCinturon(DesgasteCinturon.NoDesgastado); 
		}
end

rule "R15 - Falla Engranes"
    when
        $atraccion: MontaniaRusa(
    		resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.alineacionEngranes.compare(AlineacionEngranes.Desalineado),
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.resultadoMecanico.compare(ResultadoFinalDiagnosticoMecanico.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.setResultadoMecanico(ResultadoFinalDiagnosticoMecanico.FallaEngranes); 
		}
end

rule "R16 - Falla Frenos Friccion"
    when
        $atraccion: MontaniaRusa(
    		resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.integridadFrenos.compare(IntegridadFrenos.FallaFrenosFriccion),
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.resultadoMecanico.compare(ResultadoFinalDiagnosticoMecanico.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.setResultadoMecanico(ResultadoFinalDiagnosticoMecanico.FallaEnFrenos); 
		}
end

rule "R17 - Falla Frenos Magneticos"
    when
        $atraccion: MontaniaRusa(
    		resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.integridadFrenos.compare(IntegridadFrenos.FallaFrenosMagneticos),
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.resultadoMecanico.compare(ResultadoFinalDiagnosticoMecanico.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.setResultadoMecanico(ResultadoFinalDiagnosticoMecanico.FallaEnFrenos); 
		}
end

rule "R18 - Falla Frenos Corrosion"
    when
        $atraccion: MontaniaRusa(
    		resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.integridadFrenos.compare(IntegridadFrenos.FrenosDañadosCorrosion),
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.resultadoMecanico.compare(ResultadoFinalDiagnosticoMecanico.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.setResultadoMecanico(ResultadoFinalDiagnosticoMecanico.FallaEnFrenos); 
		}
end

rule "R19 - Falla Cinturones"
    when
        $atraccion: MontaniaRusa(
    		resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.desgasteCinturon.compare(DesgasteCinturon.Desgastado),
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.resultadoMecanico.compare(ResultadoFinalDiagnosticoMecanico.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.setResultadoMecanico(ResultadoFinalDiagnosticoMecanico.FallaCinturones); 
		}
end

rule "R20 - Deposito sin aceite"
    when
        $atraccion: MontaniaRusa(
    		resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.nivelDepositoAceite.compare(NivelDepositoAceite.Insuficiente),
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.resultadoMecanico.compare(ResultadoFinalDiagnosticoMecanico.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.setResultadoMecanico(ResultadoFinalDiagnosticoMecanico.TanqueSinSuficienteAceite); 
		}
end

rule "R21 - Sin Fallas Mecanicas"
    when
        $atraccion: MontaniaRusa(
    		resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.nivelDepositoAceite.compare(NivelDepositoAceite.Suficiente),
    		resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.desgasteCinturon.compare(DesgasteCinturon.NoDesgastado),
    		resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.integridadFrenos.compare(IntegridadFrenos.PerfectoEstado),
    		resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.alineacionEngranes.compare(AlineacionEngranes.Alineado),
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.resultadoMecanico.compare(ResultadoFinalDiagnosticoMecanico.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.setResultadoMecanico(ResultadoFinalDiagnosticoMecanico.SinFallasMecanicas); 
		}
end

rule "R22 - Baja tension"
    when
        $atraccion: MontaniaRusa(
    		tension.nivelDeVoltaje <= 580,
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.nivelDeTension.compare(NivelTension.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.setNivelDeTension(NivelTension.BajaTension); 
		}
end

rule "R23 - Alta tension"
    when
        $atraccion: MontaniaRusa(
    		tension.nivelDeVoltaje > 690,
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.nivelDeTension.compare(NivelTension.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.setNivelDeTension(NivelTension.AltaTension); 
		}
end

rule "R24 - Correcta tension"
    when
        $atraccion: MontaniaRusa(
    		tension.nivelDeVoltaje > 580,
    		tension.nivelDeVoltaje <= 690,
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.nivelDeTension.compare(NivelTension.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.setNivelDeTension(NivelTension.CorrectaTension); 
		}
end

rule "R25 - Sensor parada no operativo"
    when
        $atraccion: MontaniaRusa(
    		monitoreo.operatividadSensorParada.compare(OperatividadSensorParada.NoOperativo),
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.sensores.compare(FuncionamientoSensores.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.setSensores(FuncionamientoSensores.SensoresNoOperativos); 
		}
end

rule "R26 - Sensores monitoreo no operativo"
   when
        $atraccion: MontaniaRusa(
    		monitoreo.operatividadSensoresMonitoreo.compare(OperatividadSensoresMonitoreo.NoOperativo),
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.sensores.compare(FuncionamientoSensores.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.setSensores(FuncionamientoSensores.SensoresNoOperativos); 
		}
end

rule "R27 - Funcionamiento Sensores operativos"
   when
        $atraccion: MontaniaRusa(
    		monitoreo.operatividadSensoresMonitoreo.compare(OperatividadSensoresMonitoreo.Operativo),
    		monitoreo.operatividadSensorParada.compare(OperatividadSensorParada.Operativo),
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.sensores.compare(FuncionamientoSensores.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.setSensores(FuncionamientoSensores.SensoresOperativos); 
		}
end

rule "R28 - Nivel carga bateria PLC suficiente"
   when
        $atraccion: MontaniaRusa(
    		monitoreo.NivelCargaBateriaPLC > 80,
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.bateriaPLC.compare(BateriaPLC.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.setBateriaPLC(BateriaPLC.Suficiente); 
		}
end

rule "R29 - Nivel carga bateria PLC insuficiente"
   when
        $atraccion: MontaniaRusa(
    		monitoreo.NivelCargaBateriaPLC <= 80,
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.bateriaPLC.compare(BateriaPLC.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.setBateriaPLC(BateriaPLC.Insuficiente); 
		}
end

rule "R30 - Problemas Tension Baja"
   when
       $atraccion: MontaniaRusa(
    		resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.nivelDeTension.compare(NivelTension.BajaTension),
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.resultadoElectrico.compare(ResultadoFinalDiagnosticoElectrico.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.setResultadoElectrico(ResultadoFinalDiagnosticoElectrico.ProblemasTension); 
		}
end

rule "R31 - Problemas Tension Alta"
   when
       $atraccion: MontaniaRusa(
    		resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.nivelDeTension.compare(NivelTension.AltaTension),
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.resultadoElectrico.compare(ResultadoFinalDiagnosticoElectrico.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.setResultadoElectrico(ResultadoFinalDiagnosticoElectrico.ProblemasTension); 
		}
end

rule "R32 - Problemas Sensores"
   when
       $atraccion: MontaniaRusa(
    		resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.sensores.compare(FuncionamientoSensores.SensoresNoOperativos),
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.resultadoElectrico.compare(ResultadoFinalDiagnosticoElectrico.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.setResultadoElectrico(ResultadoFinalDiagnosticoElectrico.ProblemasEnsensores); 
		}
end

rule "R33 - Bateria Insuficiente PLC"
   when
       $atraccion: MontaniaRusa(
    		resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.bateriaPLC.compare(BateriaPLC.Insuficiente),
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.resultadoElectrico.compare(ResultadoFinalDiagnosticoElectrico.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.setResultadoElectrico(ResultadoFinalDiagnosticoElectrico.PLCsinSuficienteCarga); 
		}
end

rule "R34 - Sin Fallas Electricas"
   when
       $atraccion: MontaniaRusa(
    		resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.bateriaPLC.compare(BateriaPLC.Suficiente),
    		resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.sensores.compare(FuncionamientoSensores.SensoresOperativos),
    		resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.nivelDeTension.compare(NivelTension.CorrectaTension),
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.resultadoElectrico.compare(ResultadoFinalDiagnosticoElectrico.NoDeterminado)
        )
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.setResultadoElectrico(ResultadoFinalDiagnosticoElectrico.SinFallasElectricas); 
		}
end

rule "R35 - Falla En Sistema Frenos"
   when
       $atraccion: MontaniaRusa(
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.resultadoMecanico.compare(ResultadoFinalDiagnosticoMecanico.FallaEnFrenos),
        	resultadoFinal.diagnosticoElectromecanico.resultadoElectromecanico.compare(ResultadoFinalDiagnosticoElectromecanico.NoDeterminado)
        	)
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.setResultadoElectromecanico(ResultadoFinalDiagnosticoElectromecanico.FallaEnSistemaFrenos);
		}
end

rule "R36 - Insuficiente Aceite Depositos"
   when
       $atraccion: MontaniaRusa(
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.resultadoMecanico.compare(ResultadoFinalDiagnosticoMecanico.TanqueSinSuficienteAceite),
        	resultadoFinal.diagnosticoElectromecanico.resultadoElectromecanico.compare(ResultadoFinalDiagnosticoElectromecanico.NoDeterminado)
        	)
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.setResultadoElectromecanico(ResultadoFinalDiagnosticoElectromecanico.InsuficienteAceitedepositos);
		}
end

rule "R37 - Problemas Cinturones Seguridad"
   when
       $atraccion: MontaniaRusa(
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.resultadoMecanico.compare(ResultadoFinalDiagnosticoMecanico.FallaCinturones),
        	resultadoFinal.diagnosticoElectromecanico.resultadoElectromecanico.compare(ResultadoFinalDiagnosticoElectromecanico.NoDeterminado)
        	)
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.setResultadoElectromecanico(ResultadoFinalDiagnosticoElectromecanico.ProblemaEnCinturonesSeguridad);
		}
end

rule "R38 - Falla Sistemas Engranes"
   when
       $atraccion: MontaniaRusa(
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.resultadoMecanico.compare(ResultadoFinalDiagnosticoMecanico.FallaEngranes),
        	resultadoFinal.diagnosticoElectromecanico.resultadoElectromecanico.compare(ResultadoFinalDiagnosticoElectromecanico.NoDeterminado)
        	)
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.setResultadoElectromecanico(ResultadoFinalDiagnosticoElectromecanico.FallaEnSistemaEngranes);
		}
end

rule "R39 - Tension inadecuada"
   when
       $atraccion: MontaniaRusa(
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.resultadoElectrico.compare(ResultadoFinalDiagnosticoElectrico.ProblemasTension),
        	resultadoFinal.diagnosticoElectromecanico.resultadoElectromecanico.compare(ResultadoFinalDiagnosticoElectromecanico.NoDeterminado)
        	)
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.setResultadoElectromecanico(ResultadoFinalDiagnosticoElectromecanico.TensionInadecuada);
		}
end

rule "R40 - Falla en sistema de sensores"
   when
       $atraccion: MontaniaRusa(
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.resultadoElectrico.compare(ResultadoFinalDiagnosticoElectrico.ProblemasEnsensores),
        	resultadoFinal.diagnosticoElectromecanico.resultadoElectromecanico.compare(ResultadoFinalDiagnosticoElectromecanico.NoDeterminado)
        	)
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.setResultadoElectromecanico(ResultadoFinalDiagnosticoElectromecanico.FallaEnSistemaDeSensores);
		}
end

rule "R41 - Carga PLC Bateria insuficiente"
   when
       $atraccion: MontaniaRusa(
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.resultadoElectrico.compare(ResultadoFinalDiagnosticoElectrico.PLCsinSuficienteCarga),
        	resultadoFinal.diagnosticoElectromecanico.resultadoElectromecanico.compare(ResultadoFinalDiagnosticoElectromecanico.NoDeterminado)
        	)
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.setResultadoElectromecanico(ResultadoFinalDiagnosticoElectromecanico.CargaBateriaPLCInsuficiente);
		}
end

rule "R42 - Sin Fallas Electromecanicas"
   when
       $atraccion: MontaniaRusa(
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoElectrico.resultadoElectrico.compare(ResultadoFinalDiagnosticoElectrico.SinFallasElectricas),
        	resultadoFinal.diagnosticoElectromecanico.diagnosticoMecanico.resultadoMecanico.compare(ResultadoFinalDiagnosticoMecanico.SinFallasMecanicas),
        	resultadoFinal.diagnosticoElectromecanico.resultadoElectromecanico.compare(ResultadoFinalDiagnosticoElectromecanico.NoDeterminado)
        	)
    then
    	modify($atraccion){
       		resultadoFinal.diagnosticoElectromecanico.setResultadoElectromecanico(ResultadoFinalDiagnosticoElectromecanico.SinFallasElectromecanicas);
		}
end																				   								   

										   
rule "R43 - Revisar Frenos"
   when
       $atraccion: MontaniaRusa(
        	resultadoFinal.diagnosticoElectromecanico.resultadoElectromecanico.compare(ResultadoFinalDiagnosticoElectromecanico.FallaEnSistemaFrenos),
        	resultadoFinal.consideracion.compare(Consideraciones.NoDeterminada)
        	)
    then
    	modify($atraccion){
       		resultadoFinal.setConsideracion(Consideraciones.RevisarFrenos);
		}
end		


rule "R44 - Alinear Engranes"
   when
       $atraccion: MontaniaRusa(
        	resultadoFinal.diagnosticoElectromecanico.resultadoElectromecanico.compare(ResultadoFinalDiagnosticoElectromecanico.FallaEnSistemaEngranes),
        	resultadoFinal.consideracion.compare(Consideraciones.NoDeterminada)
        	)
    then
    	modify($atraccion){
       		resultadoFinal.setConsideracion(Consideraciones.AlinearEngranes);
		}
end

rule "R45 - Cargar Deposito Aceite"
   when
       $atraccion: MontaniaRusa(
        	resultadoFinal.diagnosticoElectromecanico.resultadoElectromecanico.compare(ResultadoFinalDiagnosticoElectromecanico.InsuficienteAceitedepositos),
        	resultadoFinal.consideracion.compare(Consideraciones.NoDeterminada)
        	)
    then
    	modify($atraccion){
       		resultadoFinal.setConsideracion(Consideraciones.CargarDepositosAceite);
		}
end


rule "R46 - Revisar Sensores"
   when
       $atraccion: MontaniaRusa(
        	resultadoFinal.diagnosticoElectromecanico.resultadoElectromecanico.compare(ResultadoFinalDiagnosticoElectromecanico.FallaEnSistemaDeSensores),
        	resultadoFinal.consideracion.compare(Consideraciones.NoDeterminada)
        	)
    then
    	modify($atraccion){
       		resultadoFinal.setConsideracion(Consideraciones.RevisarSensores);
		}
end

rule "R47 - Revisar Tension"
   when
       $atraccion: MontaniaRusa(
        	resultadoFinal.diagnosticoElectromecanico.resultadoElectromecanico.compare(ResultadoFinalDiagnosticoElectromecanico.TensionInadecuada),
        	resultadoFinal.consideracion.compare(Consideraciones.NoDeterminada)
        	)
    then
    	modify($atraccion){
       		resultadoFinal.setConsideracion(Consideraciones.RevisarNivelTension);
		}
end

rule "R48 - Revisar cinturones de seguridad"
   when
       $atraccion: MontaniaRusa(
        	resultadoFinal.diagnosticoElectromecanico.resultadoElectromecanico.compare(ResultadoFinalDiagnosticoElectromecanico.ProblemaEnCinturonesSeguridad),
        	resultadoFinal.consideracion.compare(Consideraciones.NoDeterminada)
        	)
    then
    	modify($atraccion){
       		resultadoFinal.setConsideracion(Consideraciones.RevisarCinturonesSeguridad);
		}
end		

rule "R49 - Cargar Bateria PLC"
   when
       $atraccion: MontaniaRusa(
        	resultadoFinal.diagnosticoElectromecanico.resultadoElectromecanico.compare(ResultadoFinalDiagnosticoElectromecanico.CargaBateriaPLCInsuficiente),
        	resultadoFinal.consideracion.compare(Consideraciones.NoDeterminada)
        	)
    then
    	modify($atraccion){
       		resultadoFinal.setConsideracion(Consideraciones.CargarBateriaPLC);
		}
end


rule "R50 - No operativo por clima"
    when
       $atraccion: MontaniaRusa(
        	resultadoFinal.analisisClimatico.resultadoAnalisis.compare(ResultadoAnalisisClimatico.ClimaDesfavorable),
        	resultadoFinal.consideracion.compare(Consideraciones.NoDeterminada)
        	)
    then
    	modify($atraccion){
       		resultadoFinal.setConsideracion(Consideraciones.JuegoNoOperativoPorClima);
       	}
end

																		   
rule "R51 - Operativo"
   when
       $atraccion: MontaniaRusa(
        	resultadoFinal.analisisClimatico.resultadoAnalisis.compare(ResultadoAnalisisClimatico.ClimaFavorable),
        	resultadoFinal.diagnosticoElectromecanico.resultadoElectromecanico.compare(ResultadoFinalDiagnosticoElectromecanico.SinFallasElectromecanicas),
        	resultadoFinal.consideracion.compare(Consideraciones.NoDeterminada)
        	)
    then
    	modify($atraccion){
       		resultadoFinal.setConsideracion(Consideraciones.Operativo);
		}
end											   							   